--- model/des/write_des_data.f	2017-07-28 12:19:45.896449747 +0800
+++ model/des/write_des_data.f1	2017-07-28 12:16:47.358477647 +0800
@@ -42,11 +42,11 @@
 
 !-----------------------------------------------
 
-      IF (TRIM(DES_OUTPUT_TYPE) .EQ. 'TECPLOT') THEN
-         CALL WRITE_DES_TECPLOT
-      ELSE
-         CALL WRITE_DES_VTP
-      ENDIF
+!      IF (TRIM(DES_OUTPUT_TYPE) .EQ. 'TECPLOT') THEN
+!         CALL WRITE_DES_TECPLOT
+!      ELSE
+!         CALL WRITE_DES_VTP
+!      ENDIF
 
 ! Invoke at own risk
 
@@ -94,7 +94,8 @@
       use des_rxns, only: DES_X_s
       use des_thermo, only: DES_T_s
       use discretelement, only: DES_POS_NEW, DES_VEL_NEW, DES_USR_VAR
-      use discretelement, only: DES_RADIUS
+!-RO_Sol is needed for density
+      use discretelement, only: DES_RADIUS,RO_Sol
       use discretelement, only: DES_USR_VAR, DES_USR_VAR_SIZE
       use discretelement, only: S_TIME
       use discretelement, only: USE_COHESION, PostCohesive
@@ -108,7 +109,7 @@
 
       IMPLICIT NONE
 
-      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: TMP_PAR
+      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: TMP_PAR,TMP_DENS
       CHARACTER(len=10) :: lNoP
       CHARACTER(len=24) :: sTIMEc
       INTEGER :: NN
@@ -141,12 +142,18 @@
 !----------------------------------------------------------------------/
       ALLOCATE(TMP_PAR(SIZE(DES_RADIUS)))
 
+!---Dynamically allocate struct for density calculation
+      ALLOCATE(TMP_DENS(SIZE(RO_Sol)))  
+
       CALL VTP_WRITE_ELEMENT('<PointData Scalars="Diameter" &
          &Vectors="Velocity">')
 
       CALL GET_DIAMETER(TMP_PAR)
       CALL VTP_WRITE_DATA('Diameter', TMP_PAR)
 
+!---Write density to VTP file
+      CALL VTP_WRITE_DATA('Density',RO_Sol) 
+
       CALL VTP_WRITE_DATA('Velocity', DES_VEL_NEW)
 
       CALL VTP_WRITE_DATA('ID', iGLOBAL_ID)
